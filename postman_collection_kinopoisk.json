{
	"info": {
		"_postman_id": "69e38237-e8e2-489a-86e4-b582fd3b0c58",
		"name": "Kinopoisk_FP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41732668"
	},
	"item": [
		{
			"name": "POSITIVE_поиск фильмов по названию",
			"item": [
				{
					"name": "TC_1_Поиск фильма на кириллице",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Код ответа 200 или 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_URL}}/movie/search?query=Оно",
							"host": [
								"{{base_URL}}"
							],
							"path": [
								"movie",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "Оно"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_2_Поиск фильма по названию на латинице",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Код ответа 200 или 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_URL}}/movie/search?query=Titanic",
							"host": [
								"{{base_URL}}"
							],
							"path": [
								"movie",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "Titanic"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_3_Поиск фильма по названию с цифрами",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Код ответа 200 или 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_URL}}/movie/search?query=127 часов",
							"host": [
								"{{base_URL}}"
							],
							"path": [
								"movie",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "127 часов"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NEGATIVE_поиск фильмов по названию",
			"item": [
				{
					"name": "TC_1_Поиск несуществующего фильма",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Фильмы не найдены — docs пустой\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.docs.length).to.eql(0);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_URL}}/movie/search?query=ФильмКоторогоНет",
							"host": [
								"{{base_URL}}"
							],
							"path": [
								"movie",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "ФильмКоторогоНет"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_2_Поиск фильма с пустым названием",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"docs пустой при пустом query\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.docs.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_URL}}/movie/search?query=",
							"host": [
								"{{base_URL}}"
							],
							"path": [
								"movie",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_3_Поиск фильма с набором спецсимволов в названии",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"docs пустой при спецсимволах\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.docs.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_URL}}/movie/search?query=@#$%^&*",
							"host": [
								"{{base_URL}}"
							],
							"path": [
								"movie",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "@"
								}
							],
							"hash": "$%^&*"
						}
					},
					"response": []
				},
				{
					"name": "TC_4_Поиск фильма с чрезмерно длинным названием",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"docs пустой при слишком длинном query\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.docs.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_URL}}/movie/search?query=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
							"host": [
								"{{base_URL}}"
							],
							"path": [
								"movie",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_5_Поиск фильма по числовому значению",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"docs пустой при числовом query 9999999\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.docs.length).to.eql(0);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_URL}}/movie/search?query=9999999",
							"host": [
								"{{base_URL}}"
							],
							"path": [
								"movie",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "9999999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC_6_Отправка запроса без Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Статус ответа — 401 или 403\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([401, 403]);\r",
									"});\r",
									"\r",
									"pm.test(\"Сообщение об ошибке присутствует\", function () {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.have.any.keys('message', 'error', 'statusCode');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_URL}}/movie/search?query=Матрица",
							"host": [
								"{{base_URL}}"
							],
							"path": [
								"movie",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "Матрица"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-KEY",
				"type": "string"
			},
			{
				"key": "value",
				"value": "ZH7E8WW-8B54J07-H4P2J5Z-M6C19K0",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "ZH7E8WW-8B54J07-H4P2J5Z-M6C19K0",
			"type": "string"
		},
		{
			"key": "base_URL",
			"value": "https://api.kinopoisk.dev/v1.4",
			"type": "string"
		}
	]
}